{"version":3,"sources":["App.js","index.js"],"names":["App","useState","code","setCode","completedCode","setCompletedCode","require","Configuration","openai","OpenAIApi","apiKey","handleSubmit","event","preventDefault","createCompletion","model","prompt","max_tokens","temperature","response","data","choices","text","console","error","message","className","onSubmit","value","onChange","target","type","rootElement","document","getElementById","createRoot","render"],"mappings":"oNA8CeA,MA1Cf,WACE,MAAwBC,mBAAS,IAAG,mBAA7BC,EAAI,KAAEC,EAAO,KACpB,EAA0CF,mBAAS,IAAG,mBAA/CG,EAAa,KAAEC,EAAgB,KAEtC,EAAqCC,EAAQ,IAArCC,EAAa,EAAbA,cAKFC,EAAS,IAAIC,EALa,EAATA,WAED,IAAIF,EAAc,CACtCG,OAAQ,yDAIJC,EAAY,iDAAG,WAAOC,GAAK,iFACR,OAAvBA,EAAMC,iBAAiB,kBAEEL,EAAOM,iBAAiB,CAC7CC,MAAO,mBACPC,OAAO,YAAD,OAAcd,GACpBe,WAAY,KACZC,YAAa,KACZ,KAAD,EALIC,EAAQ,OAMdd,EAAiBc,EAASC,KAAKC,QAAQ,GAAGC,MAAM,gDAEhDC,QAAQC,MAAM,EAAD,IACbnB,EAAiB,qBACjBA,EAAiB,KAAMoB,SAAS,yDAEnC,gBAfiB,sCAgBlB,OACE,sBAAKC,UAAU,YAAW,UACxB,uBAAMC,SAAUhB,EAAa,UAC3B,0BACEe,UAAU,cACVE,MAAO1B,EACP2B,SAAU,SAACjB,GAAK,OAAKT,EAAQS,EAAMkB,OAAOF,MAAM,IAElD,wBAAQG,KAAK,SAAQ,SAAC,qBAExB,8BAAM3B,MAGZ,ECvCM4B,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC,EAAG,M","file":"static/js/main.75afdce3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport openai from \"openai\";\nimport \"./styles.css\";\n\nfunction App() {\n  const [code, setCode] = useState(\"\");\n  const [completedCode, setCompletedCode] = useState(\"\");\n\n  const { Configuration, OpenAIApi } = require(\"openai\");\n\n  const configuration = new Configuration({\n    apiKey: \"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\",\n  });\n  const openai = new OpenAIApi(configuration);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await openai.createCompletion({\n        model: \"text-davinci-002\",\n        prompt: `Code for ${code}`,\n        max_tokens: 2048,\n        temperature: 0.7,\n      });\n      setCompletedCode(response.data.choices[0].text);\n    } catch (error) {\n      console.error(error);\n      setCompletedCode(\"An error occurred\");\n      setCompletedCode(error.message);\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <textarea\n          className=\"text-editor\"\n          value={code}\n          onChange={(event) => setCode(event.target.value)}\n        />\n        <button type=\"submit\">Complete Code</button>\n      </form>\n      <pre>{completedCode}</pre>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}